# Generated by Django 2.0.4 on 2018-04-11 09:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('art', models.ImageField(upload_to='images/albums/')),
            ],
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Unique ID for this event', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField()),
                ('image', models.ImageField(blank=True, default='images/default.jpg', null=True, upload_to='images/events/')),
                ('web_link', models.URLField(blank=True, max_length=250, null=True)),
                ('venue', models.CharField(blank=True, max_length=100, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='City Name', max_length=100)),
                ('state', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Playlist Name', max_length=250, null=True)),
                ('embed_code', models.CharField(blank=True, max_length=450, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Unique ID for this user', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('bio', models.TextField()),
                ('hobbies', models.CharField(max_length=200)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('profile_picture', models.ImageField(blank=True, default='images/default.jpg', null=True, upload_to='images/users/')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('embed_code', models.CharField(blank=True, max_length=250, null=True)),
                ('album', models.ManyToManyField(related_name='song_album', to='Tunes.Album')),
                ('artist', models.ManyToManyField(related_name='song_artist', to='Tunes.Artist')),
            ],
        ),
        migrations.AddField(
            model_name='profile',
            name='anthem',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_anthem', to='Tunes.Song'),
        ),
        migrations.AddField(
            model_name='profile',
            name='current_song',
            field=models.ForeignKey(blank=True, help_text='Currently listened to song', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_current_song', to='Tunes.Song'),
        ),
        migrations.AddField(
            model_name='profile',
            name='events_attended',
            field=models.ManyToManyField(blank=True, null=True, related_name='user_events_attended', to='Tunes.Event'),
        ),
        migrations.AddField(
            model_name='profile',
            name='events_attending',
            field=models.ManyToManyField(blank=True, null=True, related_name='user_events_attending', to='Tunes.Event'),
        ),
        migrations.AddField(
            model_name='profile',
            name='events_hosting',
            field=models.ManyToManyField(blank=True, null=True, related_name='user_events_hosting', to='Tunes.Event'),
        ),
        migrations.AddField(
            model_name='profile',
            name='favorite_genres',
            field=models.ManyToManyField(to='Tunes.Genre'),
        ),
        migrations.AddField(
            model_name='profile',
            name='favorite_songs',
            field=models.ManyToManyField(to='Tunes.Song'),
        ),
        migrations.AddField(
            model_name='profile',
            name='followers',
            field=models.ManyToManyField(blank=True, null=True, related_name='user_followers', to='Tunes.Profile'),
        ),
        migrations.AddField(
            model_name='profile',
            name='following',
            field=models.ManyToManyField(blank=True, null=True, related_name='user_following', to='Tunes.Profile'),
        ),
        migrations.AddField(
            model_name='profile',
            name='location',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_location', to='Tunes.Location'),
        ),
        migrations.AddField(
            model_name='profile',
            name='playlists',
            field=models.ManyToManyField(blank=True, null=True, related_name='playlist_user', to='Tunes.Playlist'),
        ),
        migrations.AddField(
            model_name='profile',
            name='rotation',
            field=models.ManyToManyField(to='Tunes.Album'),
        ),
        migrations.AddField(
            model_name='profile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='event',
            name='host',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_host', to='Tunes.Profile'),
        ),
        migrations.AddField(
            model_name='event',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='event_location', to='Tunes.Location'),
        ),
        migrations.AddField(
            model_name='event',
            name='other_events',
            field=models.ManyToManyField(related_name='other_events_occuring', to='Tunes.Event'),
        ),
        migrations.AddField(
            model_name='event',
            name='people',
            field=models.ManyToManyField(related_name='people_attending', to='Tunes.Profile'),
        ),
        migrations.AddField(
            model_name='album',
            name='artist',
            field=models.ManyToManyField(related_name='album_artist', to='Tunes.Artist'),
        ),
        migrations.AddField(
            model_name='album',
            name='genre',
            field=models.ManyToManyField(related_name='album_genre', to='Tunes.Genre'),
        ),
    ]
